angular.module("moflow", ["ngSanitize", "ngTouch", "ngAnimate", "ngRoute", "kendo.directives"]), angular.module("moflow").config(["$routeProvider", function (e) { e.when("/dmat/checklist", { templateUrl: "www/app/dmat/checklist.html", controller: "dmatController" }).when("/dmat", { templateUrl: "www/app/dmat/home.html", controller: "dmatController" }).when("/mob/history", { templateUrl: "www/app/mob/history.html", controller: "mobController" }).when("/mob/transition", { templateUrl: "www/app/mob/transition-plan.html", controller: "mobController" }).when("/mob/stream", { templateUrl: "www/app/mob/workstream-bcp.html", controller: "mobController" }).when("/mob/deal", { templateUrl: "www/app/mob/deal-setup.html", controller: "mobController" }).when("/mob/pyramids", { templateUrl: "www/app/mob/operation-pyramis.html", controller: "mobController" }).when("/mob/staffing", { templateUrl: "www/app/mob/staffing.html", controller: "mobController" }).when("/mob", { templateUrl: "www/app/mob/mobilization-solution.html", controller: "mobController" }).when("/home", { templateUrl: "www/app/home/home.html", controller: "" }).when("/", { templateUrl: "www/app/home/home.html", controller: "" }).otherwise({ redirectTo: "/home" }) }]), $(function () { global_submenu_pos = -1, window.setTimeout(function () { function e(e, l) { $("#" + e + "  table").each(function (o, a) { var i = 1; $("#" + e + " table").find("th").each(function () { var e = $(this); if (e.text() == l) { var o = e.css("background-color"), n = e.css("color"), d = e.css("border-right-color"), r = null, s = "", m = []; return $(a).find("tr").each(function () { var e = $(this).find("td:nth-child(" + i + ")"); null == r ? (r = e, s = r.text()) : e.text() == s ? e.css("border-top", "0px") : (m = t(m, s, !0), s = e.text()), m.push(e), e.text(""), e.css("background-color", o).css("color", n).css("border-bottom-color", d) }), void (m = t(m, s, !1)) } i++ }) }) } function t(e, t, l) { var o = e.length; if (o > 1) { var a = parseInt(o / 2), i = null; o % 2 == 0 ? (i = e[a - 1], e[a - 1].css("vertical-align", "bottom")) : i = e[a], i.text(t), l && e[o - 1].css("border-bottom", "solid 1px #ddd"), e = [] } return e } e("transitionPlan", "ACCENTURE DELIVERY MODEL") }, 750) }), angular.module("moflow").controller("baseController", ["$scope", "$location", function (e, t) { e["goto"] = function (e) { t.path(e) }, e.$on("$routeChangeStart", function () { console.log("routeChangeStart") }), e.$on("$routeChangeSuccess", function () { window.setTimeout(function () { var e = document.getElementsByClassName("page-modal"); e.className += " active" }, 1e3) }), e.$on("$viewContentLoaded", function () { console.log("viewContentLoaded") }) }]), angular.module("moflow").controller("mobController", ["$scope", "$location", "$timeout", function (e, t, l) { e.mobSolStatus = ["Complete", "Yet to start", "In Progress"]; var o = [{ id: 1, dataModified: "Deal RAG Status", oldValue: "Red", newValue: "Amber", updatedOn: "02 Feb 2016", UpdatedBy: "Mihir Wadia" }, { id: 2, dataModified: "Deal RAG Status", oldValue: "Amber", newValue: "Green", updatedOn: "02 Feb 2016", UpdatedBy: "Bozena, MacDoughall" }]; e.historyGridOptions = { dataSource: { data: o, schema: { model: { fields: { id: { type: "number" }, dataModified: { type: "string" }, oldValue: { type: "string" }, newValue: { type: "string" }, updatedOn: { type: "string" }, UpdatedBy: { type: "string" } } } } }, editable: !1, scrollable: !1, sortable: !1, filterable: !1, pageable: !1, columns: [{ field: "id", title: "#", attributes: { "class": "text-center" } }, { field: "dataModified", title: "DATA MODIFIED", headerAttributes: { style: "text-align: left;" } }, { field: "oldValue", title: "OLD VALUE", template: "<div class='colorCell #=oldValue#'>#=oldValue#</div>" }, { field: "newValue", title: "NEW VALUE", template: "<div class='colorCell #=newValue#'>#=newValue#</div>" }, { field: "updatedOn", title: "UPDATED ON", attributes: { "class": "text-center" } }, { field: "UpdatedBy", title: "UPDATED BY", attributes: { "class": "text-center" } }] }; var a = [{ id: 1, deliverable: "Letter of Intent (LOI) date", milestone: "Yes", startdate: "01/Feb/16", enddate: "01/Feb/16", action: "" }, { id: 2, deliverable: "Due Diligence", milestone: "Yes", startdate: "01/Feb/16", enddate: "01/Feb/16", action: "" }, { id: 3, deliverable: "Contract Signed on", milestone: "Yes", startdate: "01/Feb/16", enddate: "01/Feb/16", action: "" }, { id: 4, deliverable: "Manage Transition Program", milestone: "Yes", startdate: "01/Feb/16", enddate: "01/Feb/16", action: "" }, { id: 5, deliverable: "Establish Business Operations", milestone: "Yes", startdate: "01/Feb/16", enddate: "01/Feb/16", action: "" }, { id: 6, deliverable: "Implement Technology Data& Voice", milestone: "Yes", startdate: "01/Feb/16", enddate: "01/Feb/16", action: "" }]; e.HLScheduleGridOptions = { dataSource: { data: a, schema: { model: { fields: { id: { type: "number", editable: !1 }, deliverable: { type: "string", editable: !0 }, milestone: { editable: !1 }, startdate: { type: "date", editable: !1 }, enddate: { type: "date", editable: !1 }, action: {} } } } }, editable: { mode: "inline", createAt: "bottom" }, scrollable: !1, sortable: !1, filterable: !1, pageable: !1, columns: [{ field: "id", title: "#", attributes: { "class": "text-center" } }, { field: "deliverable", title: "DELIVERABLE", width: "360px", headerAttributes: { style: "text-align: left;" } }, { field: "milestone", title: "MILESTONE", template: "<select kendo-drop-down-list k-data-source='milestonedrop' k-ng-model='\"Yes\"' style='width: 100%'></select>" }, { field: "startdate", title: "START DATE", template: "<input kendo-date-picker k-ng-model='\"01/Feb/16\"' k-format='dateFormat'   />" }, { field: "enddate", title: "END DATE", width: "110px", template: "<input kendo-date-picker k-ng-model='\"30/Mar/16\"' k-format='dateFormat' />" }, { command: ["destroy"], width: 50 }], dataBound: function (e) { e.sender.tbody.find(".k-button").each(function (e, t) { $(".k-grid-delete").html("<span class='acn-cross'></span>").css("min-width", "10px").removeClass("k-button") }), $("tbody").on("mouseenter", "tr", function (e) { $(".k-grid-delete", e.currentTarget).addClass("showme") }), $("tbody").on("mouseleave", "tr", function (e) { $(".k-grid-delete", e.currentTarget).removeClass("showme") }) } }, e.milestonedrop = ["Yes", "No"], e.dateFormat = "dd/MMM/yy", e.addRow = function () { e.id = 10, e.itemDescr = "Nothng", e.ticketLineGrid.addRow(1) }, e.bcpTypeDrop = ["Standard", "Client Driven", "Non Standard"], e.bcpLevelDrop = ["Level 1", "Level 2", "Level 3", "Level 4"], e.bgcLevelDrop = ["Standard", "Client Specific"]; var i = [{ id: 1, deliverymodel: "Enable Business Operations", workstream: "Implement Operations Management", startdate: "01/Feb/16", enddate: "01/Feb/16", required: "Yes" }, { id: 2, deliverymodel: "Enable Business Operations", workstream: "Implement Service Management", startdate: "01/Feb/16", enddate: "01/Feb/16", required: "Yes" }, { id: 3, deliverymodel: "Enable Business Operations", workstream: "Implement Contract Management", startdate: "01/Feb/16", enddate: "01/Feb/16", required: "Yes" }, { id: 4, deliverymodel: "Enable Business Operations", workstream: "Implement Financial Management", startdate: "01/Feb/16", enddate: "01/Feb/16", required: "Yes" }, { id: 5, deliverymodel: "Enable Change", workstream: "Manage Communications", startdate: "01/Feb/16", enddate: "01/Feb/16", required: "Yes" }, { id: 6, deliverymodel: "Implement Service Delivery", workstream: "Implement Technology (Deal)", startdate: "01/Feb/16", enddate: "01/Feb/16", required: "Yes" }]; e.workstreamGridOptions = { dataSource: { data: i, schema: { model: { fields: { id: { type: "number", editable: !1 }, deliverymodel: { type: "string", editable: !0 }, workstream: { editable: !1 }, startdate: { type: "date", editable: !1 }, enddate: { type: "date", editable: !1 }, required: { type: "number", editable: !1 } } } } }, editable: { mode: "inline", createAt: "bottom" }, scrollable: !1, sortable: !1, filterable: !1, pageable: !1, columns: [{ field: "deliverymodel", title: "ACCENTURE DELIVERY MODEL", width: "360px", headerAttributes: { style: "text-align: left;" } }, { field: "workstream", title: "WORKSTREAMS" }, { field: "startdate", title: "START DATE", template: "<input kendo-date-picker k-ng-model='\"01/Feb/16\"' k-format='dateFormat'   />" }, { field: "enddate", title: "END DATE", width: "110px", template: "<input kendo-date-picker k-ng-model='\"30/Mar/16\"' k-format='dateFormat' />" }, { field: "required", title: "REQUIRED", template: "<select kendo-drop-down-list k-data-source='requiredDrop' k-ng-model='\"Yes\"' style='width: 100%'></select>" }] }, e.requiredDrop = ["Yes", "No"], e.dateFormat = "dd/MMM/yy"; var n = [{ id: 1, role: "Role1", subwave: "", levelNum1: "2" }, { id: 2, role: "Role2", subwave: "", levelNum1: "2" }, { id: 3, role: "Role3", subwave: "", levelNum1: "1" }, { id: 4, role: "Role4", subwave: "", levelNum1: "3" }, { id: 5, role: "Role5", subwave: "", levelNum1: "3" }, { id: 6, role: "Role6", subwave: "", levelNum1: "3" }]; e.opPyramisGridOptions = { dataSource: { data: n, schema: { model: { fields: { id: { type: "number" }, role: { type: "string", editable: !1 }, subwave: { type: "string", editable: !1 }, levelNum1: { type: "number", editable: !1 } } } } }, editable: !0, scrollable: !0, sortable: !1, filterable: !1, pageable: !1, columns: [{ field: "role", title: "ROLE", width: 150, headerAttributes: { style: "text-align: left;" }, template: "<select kendo-drop-down-list k-data-source='roleDrop' style='width: 100%'></select>" }, { field: "subwave", title: "SUB WAVE", width: 100, template: "<select kendo-drop-down-list k-data-source='subwaveDate' k-ng-model='' style='width: 100%'></select>" }, { field: "level1", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 13' style='width: 100%'>", columns: [{ field: "levelNum1", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }, { field: "level2", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 12' style='width: 100%'>", columns: [{ field: "levelNum2", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }, { field: "level3", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 11' style='width: 100%'>", columns: [{ field: "levelNum3", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }, { field: "level4", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 10' style='width: 100%'>", columns: [{ field: "levelNum4", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }, { field: "level5", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 09' style='width: 100%'>", columns: [{ field: "levelNum5", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }, { field: "level6", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 08' style='width: 100%'>", columns: [{ field: "levelNum6", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }, { field: "level7", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 07' style='width: 100%'>", columns: [{ field: "levelNum7", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }, { field: "level8", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 06' style='width: 100%'>", columns: [{ field: "levelNum8", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }, { field: "level9", headerTemplate: "<select kendo-drop-down-list k-data-source='levelDrop' k-ng-model='Level 05' style='width: 100%'>", columns: [{ field: "levelNum9", title: "#", template: "<input type='text' value='#=levelNum1#'>", width: 100 }] }] }, e.levelDrop = ["Level 13", "Level 12", "Level 11", "Level 10", "Level 09", "Level 08", "Level 07", "Level 06", "Level 05", "Level 04"], e.subwaveDate = ["2A", "2B", "3A", "3B", "1C"], e.roleDrop = ["Role 1", "Role 2", "Role 3", "Role 4", "Role 5", "Role 6"]; var d = [{ id: 1, role: "SPOA", level: "Manager", rolefor: "Subwave", location: "Mumbai", sourcing: "Mobilization", billCode: "52", GST_ID: "52", month: "01" }, { id: 2, role: "Transition Lead", level: "Consultant", rolefor: "Deal", location: "New Delhi", sourcing: "Borrowed", billCode: "52", GST_ID: "52", month: "01" }, { id: 3, role: "Mobilization Lead", level: "Analyst", rolefor: "Wave", location: "Mumbai", sourcing: "Mobilization", billCode: "52", GST_ID: "52", month: "01" }, { id: 4, role: "KT Support Lead", level: "Manager", rolefor: "Subwave", location: "Mumbai", sourcing: "Mobilization", billCode: "52", GST_ID: "52", month: "01" }]; e.staffingTeamGridOptions = { dataSource: { data: d, schema: { model: { fields: { id: { type: "number" }, role: { type: "string", editable: !1 }, billCode: { type: "number", editable: !1 }, GST_ID: { type: "number", editable: !1 } } } } }, editable: !0, scrollable: !1, sortable: !1, filterable: !1, pageable: !1, columns: [{ field: "role", title: "ROLE", width: "300px", headerAttributes: { style: "text-align: left;" } }, { field: "billCode", title: "BILL CODE", template: "<input type='text' value='#=billCode#' />" }, { field: "GST_ID", title: "GST ID", template: "<input type='text' value='#=GST_ID#' />" }, { field: "feb", title: "Feb", template: "<input type='text' value='#=month#' />" }, { field: "march", title: "March", template: "<input type='text' value='#=month#' />" }, { field: "april", title: "April", template: "<input type='text' value='#=month#' />" }, { field: "may", title: "May", template: "<input type='text' value='#=month#' />" }, { field: "june", title: "June", template: "<input type='text' value='#=month#' />" }, { field: "july", title: "July", template: "<input type='text' value='#=month#' />" }] } }]), angular.module("moflow").controller("dmatController", ["$scope", "$location", "$timeout", function (e, t, l) { l(function () { $(".check-list").find("input").click(function () { 1 == $(this).prop("checked") ? $(this).parent().parent().addClass("visisbleAll") : $(this).parent().parent().removeClass("visisbleAll") }) }, 500), e.checkboxClicked = function (e) { l(function () { $('[name="cbox[]"]:checked').length > 0 ? ($(".footerMenu").slideDown("slow"), $(".actionBtns").css("visibility", "hidden")) : ($(".footerMenu").slideUp("slow"), $(".actionBtns").css("visibility", "visible")) }) }, e.showfootermenu = !0, $(".cardItems").packery({ itemSelector: ".grid-item", gutter: 0 }), e.enablecreate = !1, e.createproject = function () { e.enablecreate = !0, e.showForm = !1 }, e.closemodal = function () { e.enablecreate = !1, e.showForm = !1 }, e.meccheklist = [{ id: 1, title: "Solution Plan" }, { id: 2, title: "Estimate Deal Economics" }, { id: 3, title: "Contract" }, { id: 4, title: "Client Dependecies & Obligations" }, { id: 5, title: "Due Diligence" }, { id: 6, title: "Leadership Staffing" }, { id: 7, title: "Risks & Issues" }, { id: 8, title: "Quality Assurance" }, { id: 9, title: "Mandatory Tools" }, { id: 10, title: "Client Data Protection" }], e.openDetails = function (t) { e.opnedItems = t; var l = t.id - 1; e.prevItem = "", e.nextItem = "", e.meccheklist[l - 1] && (e.prevItem = e.meccheklist[l - 1]), e.meccheklist[l + 1] && (e.nextItem = e.meccheklist[l + 1]), e.checkListDet = !0, e.hidemec = !0, e.showSatis = !0, $('[data-toggle="tooltip"]').tooltip() }, e.approval = !1, e.getApproval = function () { e.showSatis = !1, e.approval = !0, e.hidemec = !0 }, e.opplists = ["Q9876543", "Q9876544", "Q9876545", "P9876543", "P9876544", "P9876545", "R9876543", "R9876544"], e.showForm = !1, e.selectedopper = function () { e.showForm = !0 }, e.pplpicker = ["joshua.moreas", "Bozena.MacDoughall", "jose.abraham", "maria.bernard", "mehul.sheth", "kalyana.shivaraman", "vijay.ss"], e.roleList = ["DMAT", "PMO", "Lead"], e.saveProject = function () { l(function () { t.path("/checklist") }, 1e3) }; var o = [{ dealID: 1, Criteria: "Transition cost as in the CTA?", Artifacts: { CategoryID: 1, CategoryName: "Yes" }, Available: "Yes", SolutionCompleteness: "Complete", Owner: "joshua.moreas", Comments: "2" }, { dealID: 2, Criteria: "Aware of CCI target billing mechanism of transition?", Artifacts: { CategoryID: 1, CategoryName: "Yes" }, Available: "No", SolutionCompleteness: "Complete", Owner: "Bozena, MacDoughall", Comments: "2" }, { dealID: 3, Criteria: "Transformation costs factored in the CTA?", Artifacts: { CategoryID: 1, CategoryName: "Yes" }, Available: "Yes", SolutionCompleteness: "In Progress", Owner: "Bozena, MacDoughall", Comments: "2" }, { dealID: 4, Criteria: "Is the cost center & WBS setup?", Artifacts: { CategoryID: 1, CategoryName: "Yes" }, Available: "Yes", SolutionCompleteness: "Yet to Start", Owner: "", Comments: "2" }]; e.dealGridOptions = { dataSource: { data: o, schema: { model: { fields: { Criteria: { type: "string", editable: !1 }, Artifacts: { defaultValue: { CategoryID: 1, CategoryName: "Yes" } }, Available: { type: "string" }, SolutionCompleteness: { type: "string" }, Owner: { type: "string" }, Comments: { type: "string", editable: !1 } } } } }, editable: !0, scrollable: !1, sortable: !1, filterable: !1, pageable: !1, columns: [{ field: "Criteria", title: "CRITERIA", width: "360px", headerAttributes: { style: "text-align: left;" } }, { field: "Artifacts", title: "ARTIFACTS", template: "<select kendo-drop-down-list k-data-source='dropDownList' ng-model='artifacts#=dealID#' style='width: 100%'></select>" }, { field: "Available", title: "AVAILIABLE", template: "<select kendo-drop-down-list k-data-source='dropDownList'  ng-model='available#=dealID#' style='width: 100%'></select>" }, { field: "SolutionCompleteness", title: "SOLUTION COMPLETENESS", width: "110px", template: "<select kendo-drop-down-list k-data-source='slnComple'  ng-model='slncomplete#=dealID#' style='width: 100%'></select>" }, { field: "Owner", title: "OWNER", width: "180px", headerAttributes: { style: "text-align: left;" }, template: "<input type='text' class='' value='#=Owner#' placeholder='Enter Enterprise ID'>" }, { field: "Comments", title: "COMMENTS", width: "110px", template: "<div align=center><span class='acn-comment-chat' data-toggle='popover' data-placement='left'><span>#=Comments#</span></span></div>" }] }, e.dropDownList = ["Yes", "No"], e.slnComple = ["Complete", "In Progress", "Yet to Start"], setTimeout(function () { $(document).height() <= $(window).height() ? $("footer").slideDown("slow") : $("footer").slideUp("slow"), $('[data-toggle="popover"]').popover({ html: !0, content: function () { return $("#popover-cntnt").html() } }), $('[data-toggle="popover"]').on("click", function (e) { $('[data-toggle="popover"]').not(this).popover("hide") }) }, 500), $(window).scroll(function () { $(window).scrollTop() + $(window).height() >= $(document).height() - 0 ? $("footer").slideDown("slow") : $("footer").slideUp("slow") }), e.today = function () { e.startdate = new Date, e.enddate = new Date }, e.today(), e.clear = function () { e.startdate = null, e.enddate = null }, e.disabled = function (e, t) { return "day" === t && (0 === e.getDay() || 6 === e.getDay()) }, e.toggleMin = function () { e.minDate = e.minDate ? null : new Date }, e.toggleMin(), e.startDates = function (t) { e.startDate.opened = !0 }, e.endDate = function (t) { e.endDate.opened = !0 }, e.startDates = { opened: !1 }, e.endDate = { opened: !1 }, e.dateOptions = { formatYear: "yy", startingDay: 1 }, e.formats = ["dd-MMMM-yyyy", "yyyy/MM/dd", "dd.MM.yyyy", "shortDate"], e.format = e.formats[0]; var a = new Date; a.setDate(a.getDate() + 1); var i = new Date; i.setDate(a.getDate() + 2), e.events = [{ date: a, status: "full" }, { date: i, status: "partially" }], e.getDayClass = function (t, l) { if ("day" === l) for (var o = new Date(t).setHours(0, 0, 0, 0), a = 0; a < e.events.length; a++) { var i = new Date(e.events[a].date).setHours(0, 0, 0, 0); if (o === i) return e.events[a].status } return "" }, e.disabled = void 0, e.enable = function () { e.disabled = !1 }, e.disable = function () { e.disabled = !0 }, e.clear = function () { e.person.selected = void 0, e.address.selected = void 0, e.country.selected = void 0 } }]), angular.module("moflow").controller("leftMenuController", function (e) { e.noneStyle = !1, e.bodyCon = !1, e.sasd = "asd", e.toggleStyle = function () { e.bodyCon = !e.bodyCon, e.noneStyle = !e.noneStyle }, e.openSearch = !1, e.searchToggle = function () { e.openSearch = !e.openSearch } }), angular.module("moflow").controller("carouselController", ["$scope", function (e) { }]), angular.module("moflow").directive("carousel", function () { return { restrict: "E", templateUrl: "www/app/common/carousel/carousel.html", transclude: !0, controller: "carouselController", link: function (e, t, l) { e.Page = l.page, l.$observe("disableAnimation", function (e) { $animate.enabled(!e, t) }) } } });